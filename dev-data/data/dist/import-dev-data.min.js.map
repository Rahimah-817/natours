{"version":3,"sources":["import-dev-data.js"],"names":["fs","require","mongoose","Tour","User","dotenv","config","path","connectDB","regeneratorRuntime","async","_context","prev","next","awrap","connect","process","env","LOCAL_DATABASE","sent","console","log","t0","error","message","stop","tours","JSON","parse","readFileSync","concat","__dirname","users","reviews","importData","_context2","create","validateBeforeSave","Review","exit","deleteData","_context3","deleteMany","timeout","argv"],"mappings":"aAAA,IAAMA,GAAKC,QAAQ,MACbC,SAAWD,QAAQ,YADjBE,KAAGF,QAAO,0BAGZG,KAAOH,QAAQ,0BAFfC,OAAWD,QAAQ,4BAInBI,OAASJ,QAAQ,UAEvBI,OAAOC,OAAO,CAAEC,KAAM,iBAEtB,IAAMC,UAAY,WAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAEKZ,SAASa,QAAQC,QAAQC,IAAIC,iBAFlC,KAAA,EAAAP,EAAAQ,KAIdC,QAAQC,IAAR,mCAJcV,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,MAAA,GAFFJ,QAAMgB,MAANhB,UAAAA,OAAMI,EAAAW,GAAAE,UAEJ,KAAA,GAAA,IAAA,MAAA,OAAAb,EAAAc,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAlBjB,YAAkB,IAAAkB,MAAAC,KAAAC,MAAA5B,GAAA6B,aAAA,GAAAC,OAAAC,UAAA,eAAA,UAAAC,MAAAL,KAAAC,MAAA5B,GAAA6B,aAAA,GAAAC,OAAAC,UAAA,eAAA,UAkBZE,QAAUN,KAAKC,MAlBH5B,GAAA6B,aAAA,GAAAC,OAAAC,UAAA,iBAAA,UAAAG,WAAA,WAAA,OAAAzB,mBAAAC,MAAA,SAAAyB,GAAA,OAAA,OAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,KAAA,EAAA,OAAAsB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAAAJ,mBAAAK,MAAAX,KAAAiC,OAAAV,QAAA,KAAA,EAAA,OAAAS,EAAAtB,KAAA,EAAAJ,mBAAAK,MAAAV,KAAAgC,OAAAJ,MAAA,CAAAK,oBAAA,KAAA,KAAA,EAAA,OAAAF,EAAAtB,KAAA,EAAAJ,mBAAAK,MAAAwB,OAAAF,OAAAH,UAAA,KAAA,EAAAE,EAAAtB,KAAA,GAAA,MAAA,KAAA,EAAAsB,EAAAvB,KAAA,EAAAuB,EAAAb,GAAAa,EAAA,MAAA,GA6Bdf,QAAQC,IAARc,EAAAb,IA7Bc,KAAA,GAAAN,QAAAuB,OAAA,KAAA,GAAA,IAAA,MAAA,OAAAJ,EAAAV,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAAe,WAAA,WAAA,OAAA/B,mBAAAC,MAAA,SAAA+B,GAAA,OAAA,OAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,KAAA,EAAA,OAAA4B,EAAA7B,KAAA,EAAA6B,EAAA5B,KAAA,EAAAJ,mBAAAK,MAqCRX,KAAKuC,WAAW,GAAI,CAAEC,QAAS,OArCvB,KAAA,EAAA,OAAAF,EAAA5B,KAAA,EAAAJ,mBAAAK,MASTV,KAETsC,WAAA,GAAA,CAAAC,QAAA,OAXkB,KAAA,EAAA,OAAAF,EAAA5B,KAAA,EAAAJ,mBAAAK,MAuCRwB,OAAOI,WAAW,GAAI,CAAEC,QAAS,OAvCzB,KAAA,EAAAF,EAAA5B,KAAA,GAAA,MAAA,KAAA,EAAA4B,EAAA7B,KAAA,EAAA6B,EAAAnB,GAAAmB,EAAA,MAAA,GAeZT,QAAQL,IAARK,EAAAA,IAfY,KAAA,GA2ChBhB,QAAQuB,OA3CQ,KAAA,GAAA,IAAA,MAAA,OAAAE,EAAAhB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAuBC,aAAAT,QAAA4B,KAAA,GAAAV,aAAA,aAAAlB,QAAA4B,KAAA,IAAAJ","file":"import-dev-data.min.js","sourcesContent":["const fs = require('fs');\r\nconst mongoose = require('mongoose');\r\nconst Tour = require('../../model/tourSchema');\r\nconst User = require('../../model/userSchema');\r\nconst Review = require('../../model/reviewSchema');\r\nconst dotenv = require('dotenv');\r\n\r\ndotenv.config({ path: './config.env' });\r\n\r\nconst connectDB = async () => {\r\n  try {\r\n    const conn = await mongoose.connect(process.env.LOCAL_DATABASE);\r\n\r\n    console.log(`MongoDB Connected successfully!`);\r\n  } catch (error) {\r\n    console.error(`Error: ${error.message}`);\r\n  }\r\n};\r\nconnectDB();\r\n\r\n// READ JOSN FILE\r\nconst tours = JSON.parse(\r\n  fs.readFileSync(`${__dirname}/tours.json`, 'utf-8'),\r\n);\r\nconst users = JSON.parse(\r\n  fs.readFileSync(`${__dirname}/users.json`, 'utf-8'),\r\n);\r\nconst reviews = JSON.parse(\r\n  fs.readFileSync(`${__dirname}/reviews.json`, \"utf-8\"),\r\n);\r\n\r\n// IMPORT DATA INTO DB\r\nconst importData = async () => {\r\n  try {\r\n    await Tour.create(tours);\r\n    await User.create(users, {validateBeforeSave: false});\r\n    await Review.create(reviews); \r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  process.exit();\r\n};\r\n\r\n// DELETE ALL DATA FROM DB\r\nconst deleteData = async () => {\r\n  try {\r\n    await Tour.deleteMany({}, { timeout: 30000 });\r\n    await User.deleteMany({}, { timeout: 30000 });\r\n    await Review.deleteMany({}, { timeout: 30000 });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  process.exit();\r\n};\r\n\r\nif (process.argv[2] === '--import') {\r\n  importData();\r\n} else if (process.argv[2] === '--delete') {\r\n  deleteData();\r\n}\r\n"]}