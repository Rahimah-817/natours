{"version":3,"sources":["import-dev-data.js"],"names":["fs","require","mongoose","dotenv","Tour","User","config","path","DB","process","env","LOCAL_DATABASE","replace","PASSWORD","then","console","log","tours","__dirname","connect","parse","readFileSync","concat","reviews","JSON","importData","create","users","validateBeforeSave","Review","_context","t0","exit","deleteData","regeneratorRuntime","async","_context2","prev","next","awrap","deleteMany","stop","argv"],"mappings":"aAAA,IAAMA,GAAKC,QAAQ,MACbC,SAAWD,QAAQ,YADjBE,OAAGF,QAAX,UAGMG,KAAOH,QAAQ,4BAFfC,OAAWD,QAAQ,8BAInBI,KAAOJ,QAAQ,4BAErBE,OAAOG,OAAO,CAAEC,KAAM,iBAEtB,IAAMC,GAAKC,QAAQC,IAAIC,eAAeC,QALtC,aAOEH,QAAQC,IAAIG,UAJdV,SAAOG,QAAOE,IAAAM,KAAA,WAAA,OAAAC,QAAAC,IAAA,+BAEd,IAAQC,MAAGR,KAAQC,MAAIC,GAAAA,aAAAA,GAAAA,OACrBO,UADqBP,eAEbD,UAGVR,MAASiB,KAATC,MAAApB,GAA0BqB,aAA1B,GAAAC,OAA0BJ,UAA1B,eAA0B,UAAAK,QAAaC,KAAKJ,MAA5CpB,GAEAqB,aAFA,GAAAC,OAEAJ,UAFA,iBAEA,UAGMK,WAAeH,WAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAKfK,KAAUC,OAAGT,QALEG,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAKFf,KAAAqB,OAAAC,MAAA,CAAAC,oBAAA,KALER,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAKFS,OAAAH,OAAAH,UALEH,KAAAA,EAKFL,QAAAC,IAAA,6BALEI,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAKFL,QAAAC,IAAAc,EAAAC,IALEX,KAAAA,GAKFX,QAAAuB,OALEZ,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA,OAKFa,WAAA,WAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAGUnC,KAHVoC,cAAA,KAAA,EAAA,OAAAJ,EAAAE,KAAA,EAAAJ,mBAAAK,MAgBTlC,KAAKmC,cAhBI,KAAA,EAAA,OAAAJ,EAAAE,KAAA,EAAAJ,mBAAAK,MAAAV,OAAAW,cAAA,KAAA,EAAAzB,QAAAC,IAAA,8BAAAoB,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAL,GAAAK,EAAA,MAAA,GAoBfrB,QAAQC,IAARoB,EAAAL,IApBe,KAAA,GAKfhB,QAAAA,OALe,KAAA,GAAA,IAAA,MAAA,OAAAqB,EAAAK,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAyBK,aAApBhC,QAAQiC,KAAK,GAzBEjB,aAAA,aAAAhB,QAAAiC,KAAA,IAAAT","file":"import-dev-data.min.js","sourcesContent":["const fs = require(\"fs\");\r\nconst mongoose = require(\"mongoose\");\r\nconst dotenv = require(\"dotenv\");\r\nconst Tour = require(\"./../../model/tourSchema\");\r\nconst Review = require(\"./../../model/reviewSchema\");\r\nconst User = require(\"./../../model/userSchema\");\r\n\r\ndotenv.config({ path: \"./config.env\" });\r\n\r\nconst DB = process.env.LOCAL_DATABASE.replace(\r\n  \"<PASSWORD>\",\r\n  process.env.PASSWORD,\r\n);\r\n\r\nmongoose.connect(DB).then(() => console.log(\"DB connection successful!\"));\r\n\r\n// READ JSON FILE\r\nconst tours = JSON.parse(fs.readFileSync(`${__dirname}/tours.json`, \"utf-8\"));\r\nconst users = JSON.parse(fs.readFileSync(`${__dirname}/users.json`, \"utf-8\"));\r\nconst reviews = JSON.parse(\r\n  fs.readFileSync(`${__dirname}/reviews.json`, \"utf-8\"),\r\n);\r\n\r\n// IMPORT DATA INTO DB\r\nconst importData = async () => {\r\n  try {\r\n    await Tour.create(tours);\r\n    await User.create(users, { validateBeforeSave: false });\r\n    await Review.create(reviews);\r\n    console.log(\"Data successfully loaded!\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  process.exit();\r\n};\r\n\r\n// DELETE ALL DATA FROM DB\r\nconst deleteData = async () => {\r\n  try {\r\n    await Tour.deleteMany();\r\n    await User.deleteMany();\r\n    await Review.deleteMany();\r\n    console.log(\"Data successfully deleted!\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  process.exit();\r\n};\r\n\r\nif (process.argv[2] === \"--import\") {\r\n  importData();\r\n} else if (process.argv[2] === \"--delete\") {\r\n  deleteData();\r\n}\r\n"]}