{"version":3,"sources":["tourSchema.js"],"names":["mongoose","require","slugify","tourSchema","Schema","name","type","String","required","unique","maxLength","minLength","slug","duration","Number","maxGroupSize","difficulty","values","message","ratingsAverage","min","max","set","val","Math","round","ratingsQuantity","price","priceDiscound","validate","validator","summary","trim","description","imageCover","images","createdAt","Date","now","select","startDates","secretTour","Boolean","startLocation","coordinates","address","locations","day","guides","Types","ObjectId","ref","toJSON","virtuals","toObject","index","virtual","get","foreignField","localField","pre","next","lower","find","$ne","start","post","docs","console","log","populate","path","Tour","model","module","exports"],"mappings":"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","sourcesContent":["const mongoose = require(\"mongoose\");\r\nconst slugify = require(\"slugify\");\r\n// const validator = require(\"validator\");\r\n// const User = require(\"./userSchema\");\r\n\r\nconst tourSchema = new mongoose.Schema(\r\n  {\r\n    name: {\r\n      type: String,\r\n      required: [true, \"A tour must have a name\"],\r\n      unique: true,\r\n      maxLength: [40, \"A Tour name must have less or equal then 40 characters\"],\r\n      minLength: [10, \"A Tour name must have more or equal then 10 characters\"],\r\n      // validate: [validator.isAlpha, \"Tour name must only contain character\"],\r\n    },\r\n    slug: {\r\n      type: String,\r\n    },\r\n    duration: {\r\n      type: Number,\r\n      required: [true, \"A tour must have a duration\"],\r\n    },\r\n    maxGroupSize: {\r\n      type: Number,\r\n      required: [true, \"A tour must have a group size\"],\r\n    },\r\n    difficulty: {\r\n      type: String,\r\n      required: [true, \"A tour must have a difficult\"],\r\n      enum: {\r\n        values: [\"easy\", \"medium\", \"difficult\"],\r\n        message: \"Difficulty should be: easy, medium or difficult\",\r\n      },\r\n    },\r\n    ratingsAverage: {\r\n      type: Number,\r\n      default: 4.5,\r\n      min: [1, \"Rating must be above 1.0\"],\r\n      max: [5, \"Rating must be below 5.0\"],\r\n      set: (val) => Math.round(val * 10) / 10,\r\n    },\r\n    ratingsQuantity: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    price: {\r\n      type: Number,\r\n      required: [true, \"A tour must have a price\"],\r\n    },\r\n    priceDiscound: {\r\n      type: Number,\r\n      validate: {\r\n        validator: function (val) {\r\n          //This only point to current doc on NEW document creation\r\n          return val < this.price;\r\n        },\r\n        message: \"Discounted price can't be greater than the regular price\",\r\n      },\r\n    },\r\n    summary: {\r\n      type: String,\r\n      trim: true,\r\n      // required: [true, \"A tour must have a summary\"],\r\n    },\r\n    description: {\r\n      type: String,\r\n    },\r\n    imageCover: {\r\n      type: String,\r\n      // required: [true, \"A tour must have a cover image\"],\r\n    },\r\n    images: [String],\r\n    createdAt: {\r\n      type: Date,\r\n      default: Date.now,\r\n      select: false,\r\n    },\r\n    startDates: [Date],\r\n    secretTour: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    startLocation: {\r\n      // GeoJSON\r\n      type: {\r\n        type: String,\r\n        default: \"Point\",\r\n        enum: [\"Point\"],\r\n      },\r\n      coordinates: [Number],\r\n      address: String,\r\n      description: String,\r\n    },\r\n    locations: [\r\n      {\r\n        type: {\r\n          type: String,\r\n          default: \"Point\",\r\n          enum: [\"Point\"],\r\n        },\r\n        coordinates: [Number],\r\n        address: String,\r\n        description: String,\r\n        day: Number,\r\n      },\r\n    ],\r\n    guides: [\r\n      {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: \"User\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    toJSON: {\r\n      virtuals: true,\r\n    },\r\n    toObject: {\r\n      virtuals: true,\r\n    },\r\n  },\r\n);\r\n\r\n// tourSchema.index({ price: 1 });\r\ntourSchema.index({ price: 1, ratingsAverage: -1 });\r\ntourSchema.index({ slug: 1 });\r\ntourSchema.index({ startLocation: \"2dsphere\" });\r\n\r\ntourSchema.virtual(\"durationWeeks\").get(function () {\r\n  return this.duration / 7;\r\n});\r\n\r\n// Virtual Populate\r\ntourSchema.virtual(\"reviews\", {\r\n  ref: \"Review\",\r\n  foreignField: \"tour\",\r\n  localField: \"_id\",\r\n});\r\n\r\n// DOCUMENT MIDDLEWARE: runs before .save() .create()\r\ntourSchema.pre(\"save\", function (next) {\r\n  this.slug = slugify(this.name, { lower: true });\r\n  next();\r\n});\r\n\r\n// tourSchema.pre(\"save\", async function (next) {\r\n//   const guidesPromises = this.guides.map(async (id) => await User.findById(id));\r\n//   this.guides = await Promise.all(guidesPromises);\r\n//   next();\r\n// });\r\n\r\n// QUERY MIDDLEWARE:\r\ntourSchema.pre(\"find\", function (next) {\r\n  this.find({ secretTour: { $ne: true } });\r\n  next();\r\n});\r\n// tourSchema.pre(\"find\", function (next) {\r\ntourSchema.pre(/^find/, function (next) {\r\n  this.find({ secretTour: { $ne: true } });\r\n  this.start = Date.now();\r\n  next();\r\n});\r\n\r\ntourSchema.post(/^find/, function (docs, next) {\r\n  console.log(`Query took ${Date.now() - this.start} milliseconds!`);\r\n  console.log(docs);\r\n  next();\r\n});\r\n\r\ntourSchema.pre(/^find/, function (next) {\r\n  this.populate({ path: \"guides\", select: \"-__v -passwordChangedAt\" });\r\n  next();\r\n});\r\n\r\n// // AGGREGATION MIDDLEWARE\r\n// tourSchema.pre(\"aggregate\", function (next) {\r\n//   this.pipeline().unshift({ $match: { $secretTour: { $ne: true } } });\r\n\r\n//   console.log(this.pipeline);\r\n//   next()\r\n// });\r\n\r\nconst Tour = mongoose.model(\"Tour\", tourSchema);\r\nmodule.exports = Tour;\r\n"],"file":"tourSchema.dev.js"}