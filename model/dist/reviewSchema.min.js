"use strict";var mongoose=require("mongoose"),Tour=require("./tourSchema"),reviewSchema=mongoose.Schema({review:{type:String,required:[!0,"Review can not be empty!"]},rating:{type:Number,min:1,max:5},createdAt:{type:Date,default:Date.now},user:{type:mongoose.Schema.ObjectId,ref:"User",required:[!0,"Review must belong to a User."]},tour:{type:mongoose.Schema.ObjectId,ref:"Tour",required:[!0,"Review must belong to a tour."]}},{toJSON:{virtuals:!0},toObject:{virtuals:!0}});reviewSchema.index({tour:1,user:1},{unique:!0}),reviewSchema.pre(/^find/,function(e){this.populate({path:"user",select:"name photo"}),e()}),reviewSchema.statics.calcAverageRatings=function(t){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.aggregate([{$match:{tour:t}},{$group:{_id:"$tour",nRating:{$sum:1},avgRating:{$avg:"$rating"}}}]));case 2:if(0<(r=e.sent).length)return e.next=6,regeneratorRuntime.awrap(Tour.findByIdAndUpdate(t,{ratingsQuantity:r[0].nRating,ratingsAverage:r[0].nRating}));e.next=8;break;case 6:e.next=10;break;case 8:return e.next=10,regeneratorRuntime.awrap(Tour.findByIdAndUpdate(t,{ratingsQuantity:0,ratingsAverage:4.5}));case 10:case"end":return e.stop()}},null,this)},reviewSchema.post("save",function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.constructor.calcAverageRatings(this.tour));case 2:case"end":return e.stop()}},null,this)}),reviewSchema.pre(/^findOneAnd/,function(t){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:t();case 1:case"end":return e.stop()}})}),reviewSchema.post(/^findOneAnd/,function(t){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.model.calcAverageRatings(t.tour));case 2:case"end":return e.stop()}},null,this)});var Review=mongoose.model("Review",reviewSchema);module.exports=Review;
//# sourceMappingURL=reviewSchema.min.js.map
