{"version":3,"sources":["server.js"],"names":["express","require","morgan","connectDB","config","rateLimit","helmet","mongoSanitize","xss","hpp","path","AppError","globalErrorHandler","process","on","err","console","log","exit","app","set","join","__dirname","use","env","NODE_ENV","limiter","max","windowMs","message","json","limit","whitelist","tours","users","reviews","viewRouter","all","req","res","next","originalUrl","port","PORT","server","listen","close"],"mappings":"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","sourcesContent":["// const fs = require(\"fs\");\r\nconst express = require(\"express\");\r\nconst morgan = require(\"morgan\");\r\nconst connectDB = require(\"./config/db\");\r\nrequire(\"dotenv\").config();\r\nconst rateLimit = require(\"express-rate-limit\");\r\nconst helmet = require(\"helmet\");\r\nconst mongoSanitize = require(\"express-mongo-sanitize\");\r\nconst xss = require(\"xss-clean\");\r\nconst hpp = require(\"hpp\");\r\nconst path = require(\"path\");\r\n\r\nconst AppError = require(\"./utils/appError\");\r\nconst globalErrorHandler = require(\"./controller/errorController\");\r\n\r\nprocess.on(\"uncaughtException\", (err) => {\r\n  console.log(err);\r\n  console.log(\"UNHANDLER REJECTION! ðŸ’¥ Shutting down...\");\r\n  process.exit(1);\r\n});\r\n\r\nconst app = express();\r\n\r\n// PUG\r\napp.set(\"view engine\", \"pug\");\r\napp.set(\"views\", path.join(__dirname, \"views\"));\r\n\r\n// Database connection\r\nconnectDB();\r\n\r\n//1) GLOBAL MIDDLEWARES\r\n// Set security HTTP headers\r\napp.use(helmet());\r\n\r\n// Development loggin\r\nif (process.env.NODE_ENV === \"development\") {\r\n  app.use(morgan(\"dev\"));\r\n}\r\n\r\n// Limit requests from same API\r\nconst limiter = rateLimit({\r\n  max: 100,\r\n  windowMs: 60 * 60 * 1000,\r\n  message: \"Too many requests from this IP, please try again in an hour! \",\r\n});\r\napp.use(\"/api\", limiter);\r\n\r\n// Body parser, reading data from the body into req.body\r\napp.use(express.json({ limit: \"10kb\" }));\r\n\r\n// Data sanitization against NoSQL query injection\r\napp.use(mongoSanitize());\r\n\r\n// Data sanitization against XSS\r\napp.use(xss());\r\n\r\n// Prevent parameter pollution\r\napp.use(\r\n  hpp({\r\n    whitelist: [\r\n      \"duration\",\r\n      \"ratingQuantity\",\r\n      \"ratingAverage\",\r\n      \"difficulty\",\r\n      \"maxGroupSize\",\r\n      \"price\",\r\n    ],\r\n  }),\r\n);\r\n\r\n// Serving static files\r\napp.use(express.static(path.join(__dirname, \"public\")));\r\n\r\n// ROUTES\r\nconst tours = require(\"./route/tour\");\r\nconst users = require(\"./route/user\");\r\nconst reviews = require(\"./route/review\");\r\nconst viewRouter = require(\"./route/viewRoutes\");\r\n\r\napp.use(\"/\", viewRouter);\r\napp.use(\"/api/v1/tours\", tours);\r\napp.use(\"/api/v1/users\", users);\r\napp.use(\"/api/v1/reviews\", reviews);\r\n\r\napp.all(\"*\", (req, res, next) => {\r\n  next(new AppError(`Can't find ${req.originalUrl} on this server!`));\r\n});\r\n\r\napp.use(globalErrorHandler);\r\n\r\nconst port = process.env.PORT || 5000;\r\n\r\nconst server = app.listen(port, () => {\r\n  console.log(`App running on port:${port}...`);\r\n});\r\n\r\nprocess.on(\"unhandledRejection\", (err) => {\r\n  console.log(err);\r\n  console.log(\"UNCAUGHT EXCEPTION! ðŸ’¥ Shutting down...\");\r\n  server.close(() => {\r\n    process.exit(1);\r\n  });\r\n});\r\n"],"file":"server.dev.js"}